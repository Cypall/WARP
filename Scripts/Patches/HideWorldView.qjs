/**************************************************************************\
*                                                                          *
*   Copyright (C) 2020 Neo-Mind                                            *
*                                                                          *
*   This file is a part of WARP project (specific to RO clients)           *
*                                                                          *
*   WARP is free software: you can redistribute it and/or modify           *
*   it under the terms of the GNU General Public License as published by   *
*   the Free Software Foundation, either version 3 of the License, or      *
*   (at your option) any later version.                                    *
*                                                                          *
*   This program is distributed in the hope that it will be useful,        *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of         *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          *
*   GNU General Public License for more details.                           *
*                                                                          *
*   You should have received a copy of the GNU General Public License      *
*   along with this program.  If not, see <http://www.gnu.org/licenses/>.  *
*                                                                          *
*                                                                          *
|**************************************************************************|
*                                                                          *
*   Author(s)     : Neo-Mind                                               *
*   Created Date  : 2020-11-12                                             *
*   Last Modified : 2020-12-08                                             *
*                                                                          *
\**************************************************************************/

///
/// \brief NOP out all instances of World View Window creation code
///
HideWorldView = function()
{
    /// 1.1 - Ensure the WINMGR object has been loaded
	WINMGR.load();

    /// 1.2 - Find 1st pattern of window creation (There should be exactly 2 matches for map button & shortcut)
    let id = (Exe.BuildDate < 20100616) ? 0x93 : 0x8C;
        
    let part1 =
        PUSH(id)        //PUSH 8C or 93
    +   WINMGR.MovECX   //MOV ECX, g_winMgr
    +   CALL(ALLWC)     //CALL UIWindowMgr::PrepWindow (not sure what its called but this seems likely)
    +   TEST(AL, AL)    //TEST AL, AL
	;
	let part2 =
        JNE(POS2WC)     //JNE addr
    +   PUSH(id)        //PUSH 8C or 93
    +   WINMGR.MovECX   //MOV ECX, g_winMgr
    +   CALL()          //CALL UIWindowMgr::MakeWindow
    ;

    let addrs = Exe.FindHexN(part1 + part2);
    if (addrs.isEmpty())
        throw Error("First pattern not found");

	let csize = part1.byteCount();

	/// 1.3 - Also find 2nd pattern with JNE changed to JNE SHORT
	let extraCheck = (Exe.BuildDate > 20141022 && Exe.BuildDate < 20170000);

	if (extraCheck)
	{
		part2 = part2.replace(JNE(POS2WC), JNE(WCp));
		let addrs2 = Exe.FindHexN(part1 + part2);
		if (addrs2.isEmpty())
			throw Error("Second pattern not found");

		addrs = addrs.concat(addrs2);
	}

    /// 1.4 - NOP out the code till JNE & change JNE to JMP
    addrs.forEach( addr =>
    {
        Exe.SetNOPs(addr, csize);
        Exe.SetJMP(addr + csize);
    });

    /// 2.1 - Find the 3rd pattern (func calls functions from 1st pattern)
    if (extraCheck)
	{
		part1 =
			PUSH(id)        //PUSH 8C or 93
		+   MOV(ECX, R32)   //MOV ECX, reg32
		+   CALL(NEG3WC)    //CALL func ?
		;
		part2 =
		    POP(ESI)        //POP ESI
		;

		let addr = Exe.FindHex(part1);
		if (addr < 0)
			throw Error("Third pattern not found");

		/// 3.2 - NOP it out till POP ESI
        Exe.SetNOPs(addr, part1.byteCount());
	}

    return true;
};
